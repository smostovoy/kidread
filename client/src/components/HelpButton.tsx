import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { type GameType } from "@shared/schema";

interface HelpButtonProps {
  gameType: GameType;
  currentMixType?: string;
}

const GAME_INSTRUCTIONS: Record<string, string> = {
  'picture-match': '–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Å–ª–æ–≤–æ –∏ –Ω–∞–π–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É. –ù–∞–∂–º–∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ª–æ–≤—É.',
  'missing-letter': '–í —Å–ª–æ–≤–µ –ø—Ä–æ–ø—É—â–µ–Ω–∞ –æ–¥–Ω–∞ –±—É–∫–≤–∞. –í—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –±—É–∫–≤—É –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.',
  'extra-letter': '–í —Å–ª–æ–≤–µ –µ—Å—Ç—å –ª–∏—à–Ω—è—è –±—É–∫–≤–∞. –ù–∞–π–¥–∏ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –ª–∏—à–Ω—é—é –±—É–∫–≤—É, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å –µ—ë.',
  'spell-word': '–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Å–æ—Å—Ç–∞–≤—å —Å–ª–æ–≤–æ. –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–π –±—É–∫–≤—ã –∏–ª–∏ –Ω–∞–∂–∏–º–∞–π –Ω–∞ –Ω–∏—Ö, —á—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ.',
  'mix': '–í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –±—É–¥–µ—Ç –¥—Ä—É–≥–æ–π –∏–≥—Ä–æ–π. –°–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.'
};

export function HelpButton({ gameType, currentMixType }: HelpButtonProps) {
  const [showHelp, setShowHelp] = useState(false);

  const getInstructions = () => {
    if (gameType === 'mix' && currentMixType) {
      return GAME_INSTRUCTIONS[currentMixType] || GAME_INSTRUCTIONS['mix'];
    }
    return GAME_INSTRUCTIONS[gameType] || '–°–ª–µ–¥—É–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ.';
  };

  return (
    <>
      {/* Help Button */}
      <motion.button
        className="w-12 h-12 bg-blue-500 text-white rounded-full text-xl font-bold hover:bg-blue-600 transition-colors shadow-lg"
        whileHover={{ scale: 1.1 }}
        whileTap={{ scale: 0.9 }}
        onClick={() => setShowHelp(!showHelp)}
      >
        ?
      </motion.button>

      {/* Help Overlay */}
      <AnimatePresence>
        {showHelp && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999]"
            onClick={() => setShowHelp(false)}
          >
            <motion.div
              initial={{ scale: 0.5, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.5, opacity: 0 }}
              className="bg-white rounded-xl p-8 max-w-md mx-4 text-center shadow-2xl"
              onClick={(e) => e.stopPropagation()}
            >
              <div className="text-4xl mb-4">üí°</div>
              <h3 className="text-xl font-bold mb-4 text-gray-800">–ö–∞–∫ –∏–≥—Ä–∞—Ç—å</h3>
              <p className="text-gray-700 leading-relaxed mb-6">
                {getInstructions()}
              </p>
              <motion.button
                className="bg-blue-500 text-white px-6 py-3 rounded-lg font-semibold hover:bg-blue-600 transition-colors"
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => setShowHelp(false)}
              >
                –ü–æ–Ω—è—Ç–Ω–æ!
              </motion.button>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
}